// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM512[address(t)](t)
 *     Write: If load(t-1) then RAM512[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[6..8], a=load0, b=load1, c=load2,d=load3, e=load4,f=load5, g=load6, h=load7);

    RAM64(in=in, load=load0, address=address[0..5], out=RAM64.0);
    RAM64(in=in, load=load1, address=address[0..5], out=RAM64.1);
    RAM64(in=in, load=load2, address=address[0..5], out=RAM64.2);
    RAM64(in=in, load=load3, address=address[0..5], out=RAM64.3);
    RAM64(in=in, load=load4, address=address[0..5], out=RAM64.4);
    RAM64(in=in, load=load5, address=address[0..5], out=RAM64.5);
    RAM64(in=in, load=load6, address=address[0..5], out=RAM64.6);
    RAM64(in=in, load=load7, address=address[0..5], out=RAM64.7);
    Mux8Way16(a=RAM64.0, b=RAM64.1, c=RAM64.2, d=RAM64.3,e=RAM64.4, f=RAM64.5, g=RAM64.6, h=RAM64.7, sel=address[6..8], out=out); 
}
